{"project": "thematrix", "project_url": "http://devitoproject.org/", "show_commit_url": "http://github.com/devitocodes/thematrix/commit/", "hash_length": 8, "revision_to_hash": {"126": "7d51866b2a95aed2555d1ffe4d9fbca0edf4f86b", "129": "1ef1138461cd86dc04e5f43928a84b1f849d5e70", "131": "6eed53a2bde064353f54bca7a1b211135ff5d313", "133": "b8824d7590eeefe0b5a283291e7c537683195ce2", "135": "5e324f7d4d6eef7827623611d4a5ba0c55d34409", "136": "b01e7829b98a45e8771b98840b15b877b48299dd", "139": "9533257eec9d62c8330cc24febe469cb45fd446a", "153": "8f1b7117e6cf9f54f39376a53d9f5c95cc9ed50a", "156": "419d54a11c17fc112af313321d94d529b3b18fec", "170": "cbda69f30ddd74afed825542308d1b769505ca3d", "174": "c4f5bf032abbb9d88a3ae8d1b7083a5d1ecd1ab1", "191": "669f6f3893893fdc061ca6a25b355f85ce8b1145", "197": "78f098e9b08c38aa571ddf6586edf7881d966d26", "210": "de0f18f659aa912d898703dd0112f5baa91b47b6", "213": "aebb5c31d0b0f8cf6f9c8625ad4ca7f8b2dd4e07", "214": "554cdb8c52538407cfc7cd1907797ffdd4b0215e", "218": "c5e9f10c08d7be33816ef6e1fe0cb2740e74b26f", "228": "56631708f3af37781a7dda5d452217c7f30172ee", "231": "82a6353245c21b2e4ba39f9045d19cce686f07f0", "235": "187b78452e2a04007db00372cb4e63737d6865f3"}, "revision_to_date": {"126": 1589306541000, "129": 1589308834000, "131": 1589312328000, "133": 1589313965000, "135": 1589352698000, "136": 1589353954000, "139": 1589361031000, "153": 1589457479000, "156": 1589463907000, "170": 1589827197000, "174": 1589830769000, "191": 1590772218000, "197": 1590784019000, "210": 1591136432000, "213": 1591169449000, "214": 1591176778000, "218": 1591186209000, "228": 1591269511000, "231": 1591272702000, "235": 1591282304000}, "params": {"cpu": ["AMD-EPYC-7551", "HPC-IntelXeonE5-2667", "HPC-Xeon-Platinum-8168", "nonHPC-IntelXeon8168", "nonHPC-NVidia4xGK210", "nonHPC-NVidiaGK210"], "machine": ["cpu00-Standard-F64s-v2_1x1-omp", "cpu00-Standard-F64s-v2_1x2-omp", "cpu01-Standard-F64s-v2_1x1-omp", "cpu01-Standard-F64s-v2_1x2-omp", "cpu02-Standard-HC44rs_1x2-omp", "cpu03-Standard-H16_1x1-omp", "cpu04-Standard-HB60rs_1x2-omp", "gpu00-Standard-NC6-Promo_1x1-acc", "gpu00-Standard-NC6-Promo_1x1-omp", "gpu01-Standard-NC24-Promo_1x4-mpi-acc"], "num_cpu": ["1", "16", "22", "30", "32", null], "os": ["ubuntu18.04"], "ram": ["112GB", "128GB", "12GB", "240GB", "352GB", "48GB", "64GB"], "python": ["3.6"], "arch": [null, "kepler"], "branch": ["master"]}, "graph_param_list": [{"cpu": "nonHPC-IntelXeon8168", "machine": "cpu00-Standard-F64s-v2_1x2-omp", "num_cpu": "32", "os": "ubuntu18.04", "ram": "128GB", "python": "3.6", "branch": "master", "arch": null}, {"cpu": "nonHPC-IntelXeon8168", "machine": "cpu01-Standard-F64s-v2_1x2-omp", "num_cpu": "32", "os": "ubuntu18.04", "ram": "128GB", "python": "3.6", "branch": "master", "arch": null}, {"arch": "kepler", "cpu": "nonHPC-NVidiaGK210", "machine": "gpu00-Standard-NC6-Promo_1x1-acc", "num_cpu": "1", "os": "ubuntu18.04", "ram": "12GB", "python": "3.6", "branch": "master"}, {"cpu": "HPC-IntelXeonE5-2667", "machine": "cpu03-Standard-H16_1x1-omp", "os": "ubuntu18.04", "ram": "112GB", "python": "3.6", "branch": "master", "num_cpu": null, "arch": null}, {"arch": "kepler", "cpu": "nonHPC-NVidiaGK210", "machine": "gpu00-Standard-NC6-Promo_1x1-omp", "num_cpu": "1", "os": "ubuntu18.04", "ram": "12GB", "python": "3.6", "branch": "master"}, {"cpu": "AMD-EPYC-7551", "machine": "cpu04-Standard-HB60rs_1x2-omp", "num_cpu": "30", "os": "ubuntu18.04", "ram": "240GB", "python": "3.6", "branch": "master", "arch": null}, {"cpu": "HPC-Xeon-Platinum-8168", "machine": "cpu02-Standard-HC44rs_1x2-omp", "num_cpu": "22", "os": "ubuntu18.04", "ram": "352GB", "python": "3.6", "branch": "master", "arch": null}, {"cpu": "nonHPC-IntelXeon8168", "machine": "cpu01-Standard-F64s-v2_1x1-omp", "num_cpu": "16", "os": "ubuntu18.04", "ram": "64GB", "python": "3.6", "branch": "master", "arch": null}, {"arch": "kepler", "cpu": "nonHPC-NVidia4xGK210", "machine": "gpu01-Standard-NC24-Promo_1x4-mpi-acc", "num_cpu": "1", "os": "ubuntu18.04", "ram": "48GB", "python": "3.6", "branch": "master"}, {"cpu": "nonHPC-IntelXeon8168", "machine": "cpu00-Standard-F64s-v2_1x1-omp", "num_cpu": "16", "os": "ubuntu18.04", "ram": "64GB", "python": "3.6", "branch": "master", "arch": null}], "benchmarks": {"acoustic_iso.IsotropicAcousticAdjoint.track_gflopss": {"code": "class IsotropicAcousticAdjoint:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-isoa', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms, op=\"adjoint\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcousticAdjoint.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(492, 492, 492)"], ["12"], ["{'srca': 646.188904, 'v': 347421.625}"]], "timeout": 900.0, "type": "track", "unit": "gflopss", "version": "2c610a66e68000e109d95f18d06152a680f3e398ecb24d8085e22ef8f9896b9c"}, "acoustic_iso.IsotropicAcousticAdjoint.track_gpointss": {"code": "class IsotropicAcousticAdjoint:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-isoa', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms, op=\"adjoint\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcousticAdjoint.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(492, 492, 492)"], ["12"], ["{'srca': 646.188904, 'v': 347421.625}"]], "timeout": 900.0, "type": "track", "unit": "gpointss", "version": "2d51f23730168df0187d23e3b5680da3b498f9abb7741f73cc93dae2b285d26c"}, "acoustic_iso.IsotropicAcousticAdjoint.track_runtime": {"code": "class IsotropicAcousticAdjoint:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-isoa', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms, op=\"adjoint\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcousticAdjoint.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(492, 492, 492)"], ["12"], ["{'srca': 646.188904, 'v': 347421.625}"]], "timeout": 900.0, "type": "track", "unit": "runtime", "version": "8268eae86d25abc6b7d3957c69996a593cac8b48ca451164cc07f976f733e840"}, "acoustic_iso.IsotropicAcousticForward.track_gflopss": {"code": "class IsotropicAcousticForward:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-isof', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcousticForward.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(492, 492, 492)"], ["12"], ["{'rec': 109.070557, 'u': 144.055939}"]], "timeout": 900.0, "type": "track", "unit": "gflopss", "version": "ff3ea0a42b952334d91cec2ac38c507a62f926f204761bd8ec735cabbaa97394"}, "acoustic_iso.IsotropicAcousticForward.track_gpointss": {"code": "class IsotropicAcousticForward:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-isof', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcousticForward.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(492, 492, 492)"], ["12"], ["{'rec': 109.070557, 'u': 144.055939}"]], "timeout": 900.0, "type": "track", "unit": "gpointss", "version": "260917d082a5078b2b41016b52bc4aea2ebe62667cd6958656ce5f8730681bda"}, "acoustic_iso.IsotropicAcousticForward.track_runtime": {"code": "class IsotropicAcousticForward:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-isof', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcousticForward.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(492, 492, 492)"], ["12"], ["{'rec': 109.070557, 'u': 144.055939}"]], "timeout": 900.0, "type": "track", "unit": "runtime", "version": "6d6807cb01e0745af5c121f0d9d641b41d272dc5422a6b3d9cb5d2b03eb65de8"}, "acoustic_iso.IsotropicAcousticJacobian.track_gflopss": {"code": "class IsotropicAcousticJacobian:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-isoJ', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms, op=\"jacobian\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcousticJacobian.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(152, 152, 152)"], ["12"], ["{'rec': 4.95217, 'u': 144.055573, 'U': 4.879143}"]], "timeout": 900.0, "type": "track", "unit": "gflopss", "version": "855de8dbec43e2b8b9264b9011d7579a2df160c5b92095355755a8499e45eef8"}, "acoustic_iso.IsotropicAcousticJacobian.track_gpointss": {"code": "class IsotropicAcousticJacobian:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-isoJ', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms, op=\"jacobian\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcousticJacobian.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(152, 152, 152)"], ["12"], ["{'rec': 4.95217, 'u': 144.055573, 'U': 4.879143}"]], "timeout": 900.0, "type": "track", "unit": "gpointss", "version": "51de79f6948bcaaa368c6e92764c9b2cdf45178dba7c1e10726736f3c5226366"}, "acoustic_iso.IsotropicAcousticJacobian.track_runtime": {"code": "class IsotropicAcousticJacobian:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-isoJ', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms, op=\"jacobian\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcousticJacobian.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(152, 152, 152)"], ["12"], ["{'rec': 4.95217, 'u': 144.055573, 'U': 4.879143}"]], "timeout": 900.0, "type": "track", "unit": "runtime", "version": "e383970d7b4a39d11d477e841dfd18e2b910c589cd38e37881730cc6b7620d2e"}, "acoustic_iso.IsotropicAcousticJacobianAdjoint.track_gflopss": {"code": "class IsotropicAcousticJacobianAdjoint:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-isoJa', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms, op=\"jacobian_adjoint\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcousticJacobianAdjoint.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(151, 151, 151)"], ["12"], ["{'grad': 2468.533936}"]], "timeout": 900.0, "type": "track", "unit": "gflopss", "version": "d3db9fae5a74203502097b0a2f0cc4e1324c5d3307837dceae0e98b419811d89"}, "acoustic_iso.IsotropicAcousticJacobianAdjoint.track_gpointss": {"code": "class IsotropicAcousticJacobianAdjoint:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-isoJa', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms, op=\"jacobian_adjoint\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcousticJacobianAdjoint.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(151, 151, 151)"], ["12"], ["{'grad': 2468.533936}"]], "timeout": 900.0, "type": "track", "unit": "gpointss", "version": "34aa1766dfce8ade8f464f4e95bf7d3c53c1aecd8133393233d828a4397a72ad"}, "acoustic_iso.IsotropicAcousticJacobianAdjoint.track_runtime": {"code": "class IsotropicAcousticJacobianAdjoint:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-isoJa', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms, op=\"jacobian_adjoint\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcousticJacobianAdjoint.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(151, 151, 151)"], ["12"], ["{'grad': 2468.533936}"]], "timeout": 900.0, "type": "track", "unit": "runtime", "version": "a4eecf25945c9d614f93b31e8adf35ddd952ee320154cf0002a0dd61cf16ea5a"}, "acoustic_iso_ssa.IsotropicSSAAdjoint.track_gflopss": {"code": "class IsotropicSSAAdjoint:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-ssa-isoa', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic_ssa', shape, space_order, self.tn, fn_perf, fn_norms, op=\"adjoint\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso_ssa.IsotropicSSAAdjoint.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(152, 152, 152)"], ["12"], ["{'srca': 390.499268, 'v': 157214277632.0}"]], "timeout": 900.0, "type": "track", "unit": "gflopss", "version": "6cb462c0f6846eed94709096887362434a79809571b380ff01bbd16d5ca2a932"}, "acoustic_iso_ssa.IsotropicSSAAdjoint.track_gpointss": {"code": "class IsotropicSSAAdjoint:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-ssa-isoa', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic_ssa', shape, space_order, self.tn, fn_perf, fn_norms, op=\"adjoint\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso_ssa.IsotropicSSAAdjoint.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(152, 152, 152)"], ["12"], ["{'srca': 390.499268, 'v': 157214277632.0}"]], "timeout": 900.0, "type": "track", "unit": "gpointss", "version": "fcaae3e5d5fac8e1006b7270e995f6bf4b18cbe877c241ac1a3f09c87b12a0b7"}, "acoustic_iso_ssa.IsotropicSSAAdjoint.track_runtime": {"code": "class IsotropicSSAAdjoint:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-ssa-isoa', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic_ssa', shape, space_order, self.tn, fn_perf, fn_norms, op=\"adjoint\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso_ssa.IsotropicSSAAdjoint.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(152, 152, 152)"], ["12"], ["{'srca': 390.499268, 'v': 157214277632.0}"]], "timeout": 900.0, "type": "track", "unit": "runtime", "version": "9d0e3d4eb2076c394b30c63ce9308a28df56f0721f19b7a7d60762b0d022eeba"}, "acoustic_iso_ssa.IsotropicSSAForward.track_gflopss": {"code": "class IsotropicSSAForward:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-ssa-isof', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic_ssa', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso_ssa.IsotropicSSAForward.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(152, 152, 152)"], ["12"], ["{'rec': 247.9561, 'u': 7438246.5}"]], "timeout": 900.0, "type": "track", "unit": "gflopss", "version": "e15a83914382ecd62b615313e58dda737f35fc1c34b0550bcd875b05f3190ff3"}, "acoustic_iso_ssa.IsotropicSSAForward.track_gpointss": {"code": "class IsotropicSSAForward:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-ssa-isof', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic_ssa', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso_ssa.IsotropicSSAForward.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(152, 152, 152)"], ["12"], ["{'rec': 247.9561, 'u': 7438246.5}"]], "timeout": 900.0, "type": "track", "unit": "gpointss", "version": "ef8e7e49b2d3ee74b1e7b2872dca34258c714a8611c145564a33863eccfddec5"}, "acoustic_iso_ssa.IsotropicSSAForward.track_runtime": {"code": "class IsotropicSSAForward:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-ssa-isof', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic_ssa', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso_ssa.IsotropicSSAForward.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(152, 152, 152)"], ["12"], ["{'rec': 247.9561, 'u': 7438246.5}"]], "timeout": 900.0, "type": "track", "unit": "runtime", "version": "9de798790985d6ca2c4af626d7513016337da9a34c33208528bc84fa7e91e1bb"}, "acoustic_iso_ssa.IsotropicSSAJacobian.track_gflopss": {"code": "class IsotropicSSAJacobian:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-ssa-isoJ', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic_ssa', shape, space_order, self.tn, fn_perf, fn_norms, op=\"jacobian\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso_ssa.IsotropicSSAJacobian.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(152, 152, 152)"], ["12"], ["{'rec': 0.070716, 'u0': 7438246.0, 'du': 18011874.0}"]], "timeout": 900.0, "type": "track", "unit": "gflopss", "version": "3fad069be643950bdd0255c1e34b910df4fef9f135f2c251235ef01b6879f114"}, "acoustic_iso_ssa.IsotropicSSAJacobian.track_gpointss": {"code": "class IsotropicSSAJacobian:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-ssa-isoJ', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic_ssa', shape, space_order, self.tn, fn_perf, fn_norms, op=\"jacobian\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso_ssa.IsotropicSSAJacobian.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(152, 152, 152)"], ["12"], ["{'rec': 0.070716, 'u0': 7438246.0, 'du': 18011874.0}"]], "timeout": 900.0, "type": "track", "unit": "gpointss", "version": "fe11a7e59dbbc00a650a57770fa4fe8b0a86e62ee85ff084007a83ddce8f8bc0"}, "acoustic_iso_ssa.IsotropicSSAJacobian.track_runtime": {"code": "class IsotropicSSAJacobian:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-ssa-isoJ', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic_ssa', shape, space_order, self.tn, fn_perf, fn_norms, op=\"jacobian\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso_ssa.IsotropicSSAJacobian.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(152, 152, 152)"], ["12"], ["{'rec': 0.070716, 'u0': 7438246.0, 'du': 18011874.0}"]], "timeout": 900.0, "type": "track", "unit": "runtime", "version": "db01a23d30fa60a33e2ee9adb0210f2f85e2cdc700e176c801467e109196ca60"}, "acoustic_tti.TTIAcousticAdjoint.track_gflopss": {"code": "class TTIAcousticAdjoint:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-ttia', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('tti', shape, space_order, self.tn, fn_perf, fn_norms, op=\"adjoint\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_tti.TTIAcousticAdjoint.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(350, 350, 350)"], ["12"], ["{'srca': 1588.117065, 'p': 568135.6875, 'r': 620591.5}"]], "timeout": 900.0, "type": "track", "unit": "gflopss", "version": "ad0345d495e9edcb9a2f875431408bb70932683acd94bfa1626ec03fc6a24bf4"}, "acoustic_tti.TTIAcousticAdjoint.track_gpointss": {"code": "class TTIAcousticAdjoint:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-ttia', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('tti', shape, space_order, self.tn, fn_perf, fn_norms, op=\"adjoint\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_tti.TTIAcousticAdjoint.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(350, 350, 350)"], ["12"], ["{'srca': 1588.117065, 'p': 568135.6875, 'r': 620591.5}"]], "timeout": 900.0, "type": "track", "unit": "gpointss", "version": "207d169c117bed56426621e070f6d38b14280ff3565485a2aeb88d81eb7e855e"}, "acoustic_tti.TTIAcousticAdjoint.track_runtime": {"code": "class TTIAcousticAdjoint:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-ttia', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('tti', shape, space_order, self.tn, fn_perf, fn_norms, op=\"adjoint\")\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_tti.TTIAcousticAdjoint.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(350, 350, 350)"], ["12"], ["{'srca': 1588.117065, 'p': 568135.6875, 'r': 620591.5}"]], "timeout": 900.0, "type": "track", "unit": "runtime", "version": "50ac683539c752378824a7e439fa94db1a6953ba35258eb5db4b201094b9c828"}, "acoustic_tti.TTIAcousticForward.track_gflopss": {"code": "class TTIAcousticForward:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-tti', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('tti', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_tti.TTIAcousticForward.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(350, 350, 350)"], ["12"], ["{'rec': 17.805016, 'u': 29.331156, 'v': 29.331171}"]], "timeout": 900.0, "type": "track", "unit": "gflopss", "version": "2c5d670a0ea4cadfa2dc0aa6e42758c95d44ed78bca8978bbb94f3c5cd651ba7"}, "acoustic_tti.TTIAcousticForward.track_gpointss": {"code": "class TTIAcousticForward:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-tti', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('tti', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_tti.TTIAcousticForward.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(350, 350, 350)"], ["12"], ["{'rec': 17.805016, 'u': 29.331156, 'v': 29.331171}"]], "timeout": 900.0, "type": "track", "unit": "gpointss", "version": "7bdec4892e619539356dfb48c40c70580d5fa4127a4d3fd85f2d7c97e4a0be6d"}, "acoustic_tti.TTIAcousticForward.track_runtime": {"code": "class TTIAcousticForward:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-tti', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('tti', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_tti.TTIAcousticForward.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(350, 350, 350)"], ["12"], ["{'rec': 17.805016, 'u': 29.331156, 'v': 29.331171}"]], "timeout": 900.0, "type": "track", "unit": "runtime", "version": "b468018683ada67ea15449a1567af9340442403a9e006ab06f589ce70f930d2c"}, "elastic.Elastic.track_gflopss": {"code": "class Elastic:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('elastic', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('elastic', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "elastic.Elastic.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(100, 100, 100)"], ["12"], ["{'rec1': 2.814472, 'rec2': 0.119794}"]], "timeout": 900.0, "type": "track", "unit": "gflopss", "version": "32bad2db806c7f2ddc1f1e03667d1c4529bb174d1213bb49f2520b48c86b95d2"}, "elastic.Elastic.track_gpointss": {"code": "class Elastic:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('elastic', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('elastic', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "elastic.Elastic.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(100, 100, 100)"], ["12"], ["{'rec1': 2.814472, 'rec2': 0.119794}"]], "timeout": 900.0, "type": "track", "unit": "gpointss", "version": "abc075e4313d8530763d84aeb417ae7a1429e8515c0e353464bf1bbe0abdf5c4"}, "elastic.Elastic.track_runtime": {"code": "class Elastic:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('elastic', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('elastic', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "elastic.Elastic.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(100, 100, 100)"], ["12"], ["{'rec1': 2.814472, 'rec2': 0.119794}"]], "timeout": 900.0, "type": "track", "unit": "runtime", "version": "65971090de7c0690088a612ef9283750a43632b086e93b8a1c138f6c0bb2cdfe"}, "viscoelastic.Viscoelastic.track_gflopss": {"code": "class Viscoelastic:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('viscoelastic', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('viscoelastic', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "viscoelastic.Viscoelastic.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(100, 100, 100)"], ["12"], ["{'rec1': 3.314084, 'rec2': 0.049992}"]], "timeout": 900.0, "type": "track", "unit": "gflopss", "version": "b26cc7af404fac11063cbfba56b0c6b101ba832f0d9fc56647f687d607da5dba"}, "viscoelastic.Viscoelastic.track_gpointss": {"code": "class Viscoelastic:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('viscoelastic', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('viscoelastic', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "viscoelastic.Viscoelastic.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(100, 100, 100)"], ["12"], ["{'rec1': 3.314084, 'rec2': 0.049992}"]], "timeout": 900.0, "type": "track", "unit": "gpointss", "version": "802ec0afbeb1a6f751f303d55103d31452fd36275447e529baeb6e31f5383d7b"}, "viscoelastic.Viscoelastic.track_runtime": {"code": "class Viscoelastic:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('viscoelastic', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('viscoelastic', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "viscoelastic.Viscoelastic.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(100, 100, 100)"], ["12"], ["{'rec1': 3.314084, 'rec2': 0.049992}"]], "timeout": 900.0, "type": "track", "unit": "runtime", "version": "7d9915b53fccb4fc1a181a1830849e3d9d2125cc7f4a594d9bda84b1391840ee"}}, "machines": {"cpu00-Standard-F64s-v2_1x2-omp": {"arch": "x86_64", "cpu": "nonHPC-IntelXeon8168", "machine": "cpu00-Standard-F64s-v2_1x2-omp", "num_cpu": "32", "os": "ubuntu18.04", "ram": "128GB", "version": 1}, "cpu01-Standard-F64s-v2_1x2-omp": {"arch": "x86_64", "cpu": "nonHPC-IntelXeon8168", "machine": "cpu01-Standard-F64s-v2_1x2-omp", "num_cpu": "32", "os": "ubuntu18.04", "ram": "128GB", "version": 1}, "gpu00-Standard-NC6-Promo_1x1-acc": {"arch": "kepler", "cpu": "nonHPC-NVidiaGK210", "machine": "gpu00-Standard-NC6-Promo_1x1-acc", "num_cpu": "1", "os": "ubuntu18.04", "ram": "12GB", "version": 1}, "cpu03-Standard-H16_1x1-omp": {"arch": "x86_64", "cpu": "HPC-IntelXeonE5-2667", "machine": "cpu03-Standard-H16_1x1-omp", "num_cpu": "16", "os": "ubuntu18.04", "ram": "112GB", "version": 1}, "gpu00-Standard-NC6-Promo_1x1-omp": {"arch": "kepler", "cpu": "nonHPC-NVidiaGK210", "machine": "gpu00-Standard-NC6-Promo_1x1-omp", "num_cpu": "1", "os": "ubuntu18.04", "ram": "12GB", "version": 1}, "cpu04-Standard-HB60rs_1x2-omp": {"arch": "x86_64", "cpu": "AMD-EPYC-7551", "machine": "cpu04-Standard-HB60rs_1x2-omp", "num_cpu": "30", "os": "ubuntu18.04", "ram": "240GB", "version": 1}, "cpu02-Standard-HC44rs_1x2-omp": {"arch": "x86_64", "cpu": "HPC-Xeon-Platinum-8168", "machine": "cpu02-Standard-HC44rs_1x2-omp", "num_cpu": "22", "os": "ubuntu18.04", "ram": "352GB", "version": 1}, "cpu01-Standard-F64s-v2_1x1-omp": {"arch": "x86_64", "cpu": "nonHPC-IntelXeon8168", "machine": "cpu01-Standard-F64s-v2_1x1-omp", "num_cpu": "16", "os": "ubuntu18.04", "ram": "64GB", "version": 1}, "gpu01-Standard-NC24-Promo_1x4-mpi-acc": {"arch": "kepler", "cpu": "nonHPC-NVidia4xGK210", "machine": "gpu01-Standard-NC24-Promo_1x4-mpi-acc", "num_cpu": "1", "os": "ubuntu18.04", "ram": "48GB", "version": 1}, "cpu00-Standard-F64s-v2_1x1-omp": {"arch": "x86_64", "cpu": "nonHPC-IntelXeon8168", "machine": "cpu00-Standard-F64s-v2_1x1-omp", "num_cpu": "16", "os": "ubuntu18.04", "ram": "64GB", "version": 1}}, "tags": {}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}
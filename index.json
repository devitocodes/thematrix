{"project": "thematrix", "project_url": "http://devitoproject.org/", "show_commit_url": "http://github.com/devitocodes/thematrix/commit/", "hash_length": 8, "revision_to_hash": {"127": "7d51866b2a95aed2555d1ffe4d9fbca0edf4f86b", "130": "1ef1138461cd86dc04e5f43928a84b1f849d5e70", "132": "6eed53a2bde064353f54bca7a1b211135ff5d313", "134": "b8824d7590eeefe0b5a283291e7c537683195ce2", "136": "5e324f7d4d6eef7827623611d4a5ba0c55d34409", "137": "b01e7829b98a45e8771b98840b15b877b48299dd", "140": "9533257eec9d62c8330cc24febe469cb45fd446a", "154": "8f1b7117e6cf9f54f39376a53d9f5c95cc9ed50a", "157": "419d54a11c17fc112af313321d94d529b3b18fec"}, "revision_to_date": {"127": 1589306541000, "130": 1589308834000, "132": 1589312328000, "134": 1589313965000, "136": 1589352698000, "137": 1589353954000, "140": 1589361031000, "154": 1589457479000, "157": 1589463907000}, "params": {"cpu": ["nonHPC-IntelXeon8168"], "machine": ["cpu00-Standard-F64s-v2_1x1-omp", "cpu00-Standard-F64s-v2_1x2-omp", "cpu01-Standard-F64s-v2_1x1-omp", "cpu01-Standard-F64s-v2_1x2-omp"], "num_cpu": ["16", "32"], "os": ["ubuntu18.04"], "ram": ["128GB", "64GB"], "python": ["3.6"], "branch": ["master"]}, "graph_param_list": [{"cpu": "nonHPC-IntelXeon8168", "machine": "cpu00-Standard-F64s-v2_1x2-omp", "num_cpu": "32", "os": "ubuntu18.04", "ram": "128GB", "python": "3.6", "branch": "master"}, {"cpu": "nonHPC-IntelXeon8168", "machine": "cpu01-Standard-F64s-v2_1x2-omp", "num_cpu": "32", "os": "ubuntu18.04", "ram": "128GB", "python": "3.6", "branch": "master"}, {"cpu": "nonHPC-IntelXeon8168", "machine": "cpu01-Standard-F64s-v2_1x1-omp", "num_cpu": "16", "os": "ubuntu18.04", "ram": "64GB", "python": "3.6", "branch": "master"}, {"cpu": "nonHPC-IntelXeon8168", "machine": "cpu00-Standard-F64s-v2_1x1-omp", "num_cpu": "16", "os": "ubuntu18.04", "ram": "64GB", "python": "3.6", "branch": "master"}], "benchmarks": {"acoustic_iso.IsotropicAcoustic.track_gflopss": {"code": "class IsotropicAcoustic:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-iso', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcoustic.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(492, 492, 492)"], ["12"], ["{'rec': 184.5264, 'u': 151.545837}"]], "timeout": 600.0, "type": "track", "unit": "gflopss", "version": "b97b7e3f4f513a747f39a683053582bde400979ae94bb88a1bf71cec002c2161"}, "acoustic_iso.IsotropicAcoustic.track_gpointss": {"code": "class IsotropicAcoustic:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-iso', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcoustic.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(492, 492, 492)"], ["12"], ["{'rec': 184.5264, 'u': 151.545837}"]], "timeout": 600.0, "type": "track", "unit": "gpointss", "version": "7fb09dc8c489b286f83fc73c7061e028402e1c5ee158eaf5739902d116601349"}, "acoustic_iso.IsotropicAcoustic.track_runtime": {"code": "class IsotropicAcoustic:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-iso', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('acoustic', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_iso.IsotropicAcoustic.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(492, 492, 492)"], ["12"], ["{'rec': 184.5264, 'u': 151.545837}"]], "timeout": 600.0, "type": "track", "unit": "runtime", "version": "bb0487caf1d5288f0375ff607eb5695d29789a93150e4d432ab5bdf3c7a7ad32"}, "acoustic_tti.TTIAcoustic.track_gflopss": {"code": "class TTIAcoustic:\n    def track_gflopss(self, shape, space_order, norms):\n        return self.summary.gflopss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-tti', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('tti', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_tti.TTIAcoustic.track_gflopss", "param_names": ["shape", "space_order", "norms"], "params": [["(350, 350, 350)"], ["12"], ["{'rec': 66.417102, 'u': 30.707737, 'v': 30.707728}"]], "timeout": 600.0, "type": "track", "unit": "gflopss", "version": "2b6cf21e4116957804cc49b3c0eca1c0ac186d888abe48e38e39b4724f146048"}, "acoustic_tti.TTIAcoustic.track_gpointss": {"code": "class TTIAcoustic:\n    def track_gpointss(self, shape, space_order, norms):\n        return self.summary.gpointss\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-tti', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('tti', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_tti.TTIAcoustic.track_gpointss", "param_names": ["shape", "space_order", "norms"], "params": [["(350, 350, 350)"], ["12"], ["{'rec': 66.417102, 'u': 30.707737, 'v': 30.707728}"]], "timeout": 600.0, "type": "track", "unit": "gpointss", "version": "0bad97a1e6a849fe3f1fd46f1aa8e7ea2355461de41e9b5488fd02afd2861c5f"}, "acoustic_tti.TTIAcoustic.track_runtime": {"code": "class TTIAcoustic:\n    def track_runtime(self, shape, space_order, norms):\n        return self.summary.time\n\n    def setup(self, shape, space_order, norms):\n        fn_perf, fn_norms = run_prepare('acoustic-tti', shape, space_order)\n        try:\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())\n        except FileNotFoundError:\n            run_benchmark('tti', shape, space_order, self.tn, fn_perf, fn_norms)\n            check_norms(fn_norms, norms)\n            with open(fn_perf, 'r') as f:\n                self.summary = eval(f.read())", "name": "acoustic_tti.TTIAcoustic.track_runtime", "param_names": ["shape", "space_order", "norms"], "params": [["(350, 350, 350)"], ["12"], ["{'rec': 66.417102, 'u': 30.707737, 'v': 30.707728}"]], "timeout": 600.0, "type": "track", "unit": "runtime", "version": "a7c1811854408030a2606a60de16c762ecc3b99f8a94c65f3c3f1202051f0fbf"}}, "machines": {"cpu00-Standard-F64s-v2_1x2-omp": {"arch": "x86_64", "cpu": "nonHPC-IntelXeon8168", "machine": "cpu00-Standard-F64s-v2_1x2-omp", "num_cpu": "32", "os": "ubuntu18.04", "ram": "128GB", "version": 1}, "cpu01-Standard-F64s-v2_1x2-omp": {"arch": "x86_64", "cpu": "nonHPC-IntelXeon8168", "machine": "cpu01-Standard-F64s-v2_1x2-omp", "num_cpu": "32", "os": "ubuntu18.04", "ram": "128GB", "version": 1}, "cpu01-Standard-F64s-v2_1x1-omp": {"arch": "x86_64", "cpu": "nonHPC-IntelXeon8168", "machine": "cpu01-Standard-F64s-v2_1x1-omp", "num_cpu": "16", "os": "ubuntu18.04", "ram": "64GB", "version": 1}, "cpu00-Standard-F64s-v2_1x1-omp": {"arch": "x86_64", "cpu": "nonHPC-IntelXeon8168", "machine": "cpu00-Standard-F64s-v2_1x1-omp", "num_cpu": "16", "os": "ubuntu18.04", "ram": "64GB", "version": 1}}, "tags": {}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}